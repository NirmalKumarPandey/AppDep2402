{"ast":null,"code":"var _jsxFileName = \"/Users/nirmalkumar/Documents/Node Js/Json Web Token/Demo/src/Component/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  let emailInputRef = useRef();\n  let passwordInputRef = useRef();\n  let dispatch = useDispatch();\n  let navigate = useNavigate();\n  let validateToken = async () => {\n    let dataToSend = new FormData();\n    dataToSend.append(\"token\", localStorage.getItem(\"token\"));\n    let reqOption = {\n      method: \"POST\",\n      body: dataToSend\n    };\n    let JSONData = await fetch(\"http://localhost:4567/validateToken\", reqOption);\n    let JSOData = await JSONData.json();\n    console.log(JSOData);\n    // Copy this code...................\n\n    if (JSOData.status === \"success\") {\n      dispatch({\n        type: \"login\",\n        data: JSOData.data\n      });\n      navigate(\"/dashboard\");\n    } else {\n      alert(JSOData.msg);\n    }\n  };\n  let validateLogin = async () => {\n    let dataToSend = new FormData();\n    dataToSend.append(\"email\", emailInputRef.current.value);\n    dataToSend.append(\"password\", passwordInputRef.current.value);\n    let reqOption = {\n      method: \"POST\",\n      body: dataToSend\n    };\n    let JSONData = await fetch(\"http://localhost:4567/login\", reqOption);\n    let JsoData = await JSONData.json();\n    if (JsoData.status === \"success\") {\n      // Want to store credential into local Storage\n      //   localStorage.setItem(\"email\", emailInputRef.current.value);\n      //   localStorage.setItem(\"password\", passwordInputRef.current.value);\n\n      // Want to store credential into local storage\n      // Now , I do not want to store username and password into local storage. Instead , we store token.\n      localStorage.setItem(\"token\", JsoData.data.token);\n      // Now , I do not want to store username and password into local storage. Instead , we store token.\n      dispatch({\n        type: \"login\",\n        data: JsoData.data\n      });\n      navigate(\"/dashboard\");\n    } else {\n      alert(JsoData.msg);\n    }\n    console.log(JsoData);\n  };\n  useEffect(() => {\n    // Auto login work properly.....\n    //  emailInputRef.current.value = localStorage.getItem(\"email\");\n    //   passwordInputRef.current.value = localStorage.getItem(\"password\");\n    //  validateLogin();\n\n    // I wanted to send token , when token exist and \n    // When we send this token Server recieve this token.\n    //After That , You sholud Decript it.\n    if (localStorage.getItem(\"token\")) {\n      validateToken();\n    }\n  }, [validateToken]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: emailInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: passwordInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => validateLogin(),\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/signup\",\n      children: \"Signup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"Lmbp78TfOpOyY69R0G2oN648WL0=\", false, function () {\n  return [useDispatch, useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useRef","useEffect","useDispatch","Link","useNavigate","jsxDEV","_jsxDEV","Login","_s","emailInputRef","passwordInputRef","dispatch","navigate","validateToken","dataToSend","FormData","append","localStorage","getItem","reqOption","method","body","JSONData","fetch","JSOData","json","console","log","status","type","data","alert","msg","validateLogin","current","value","JsoData","setItem","token","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","onClick","to","_c","$RefreshReg$"],"sources":["/Users/nirmalkumar/Documents/Node Js/Json Web Token/Demo/src/Component/Login.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react'\nimport { useDispatch } from 'react-redux';\nimport { Link, useNavigate } from 'react-router-dom';\n\nfunction Login() {\n\n    let emailInputRef = useRef();\n    let passwordInputRef = useRef();\n    let dispatch = useDispatch();\n\n    let navigate = useNavigate();\n\n    let validateToken = async () => {\n        let dataToSend = new FormData();\n        dataToSend.append(\"token\", localStorage.getItem(\"token\"));\n\n        let reqOption = {\n            method: \"POST\",\n            body: dataToSend,\n        }\n        let JSONData = await fetch(\"http://localhost:4567/validateToken\", reqOption);\n        let JSOData = await JSONData.json();\n        console.log(JSOData);\n        // Copy this code...................\n\n        if (JSOData.status === \"success\") {\n            dispatch({ type: \"login\", data: JSOData.data });\n            navigate(\"/dashboard\");\n        }\n        else {\n            alert(JSOData.msg);\n        }\n    }\n\n    let validateLogin = async () => {\n        let dataToSend = new FormData();\n        dataToSend.append(\"email\", emailInputRef.current.value);\n        dataToSend.append(\"password\", passwordInputRef.current.value);\n        let reqOption = {\n            method: \"POST\",\n            body: dataToSend,\n        }\n        let JSONData = await fetch(\"http://localhost:4567/login\", reqOption);\n        let JsoData = await JSONData.json();\n        if (JsoData.status === \"success\") {\n            // Want to store credential into local Storage\n            //   localStorage.setItem(\"email\", emailInputRef.current.value);\n            //   localStorage.setItem(\"password\", passwordInputRef.current.value);\n\n            // Want to store credential into local storage\n            // Now , I do not want to store username and password into local storage. Instead , we store token.\n            localStorage.setItem(\"token\", JsoData.data.token);\n            // Now , I do not want to store username and password into local storage. Instead , we store token.\n            dispatch({ type: \"login\", data: JsoData.data });\n            navigate(\"/dashboard\");\n        }\n        else {\n            alert(JsoData.msg);\n        }\n        console.log(JsoData);\n    }\n    useEffect(() => {\n        // Auto login work properly.....\n        //  emailInputRef.current.value = localStorage.getItem(\"email\");\n        //   passwordInputRef.current.value = localStorage.getItem(\"password\");\n        //  validateLogin();\n\n        // I wanted to send token , when token exist and \n        // When we send this token Server recieve this token.\n        //After That , You sholud Decript it.\n        if (localStorage.getItem(\"token\")) {\n            validateToken();\n        }\n\n    }, [validateToken]);\n\n    return (\n        <div className='App'>\n            <form>\n                <h2>Login Page</h2>\n\n                <div>\n                    <label>Email</label>\n                    <input ref={emailInputRef}></input>\n                </div>\n                <div>\n                    <label>Password</label>\n                    <input ref={passwordInputRef}></input>\n                </div>\n\n                <div>\n                    <button type='button' onClick={() => validateLogin()}>Login</button>\n                </div>\n\n            </form>\n            <br></br>\n            <br></br>\n            <br></br>\n            <br></br>\n            <Link to=\"/signup\">Signup</Link>\n        </div>\n    )\n}\n\nexport default Login"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}