{"ast":null,"code":"import React,{useRef,useEffect}from'react';import{useDispatch}from'react-redux';import{Link,useNavigate}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Login(){let emailInputRef=useRef();let passwordInputRef=useRef();let dispatch=useDispatch();let navigate=useNavigate();let validateToken=async()=>{let dataToSend=new FormData();dataToSend.append(\"token\",localStorage.getItem(\"token\"));let reqOption={method:\"POST\",body:dataToSend};let JSONData=await fetch(\"/validateToken\",reqOption);let JSOData=await JSONData.json();console.log(JSOData);// Copy this code...................\nif(JSOData.status===\"success\"){dispatch({type:\"login\",data:JSOData.data});navigate(\"/dashboard\");}else{alert(JSOData.msg);}};let validateLogin=async()=>{let dataToSend=new FormData();dataToSend.append(\"email\",emailInputRef.current.value);dataToSend.append(\"password\",passwordInputRef.current.value);let reqOption={method:\"POST\",body:dataToSend};let JSONData=await fetch(\"/login\",reqOption);let JsoData=await JSONData.json();if(JsoData.status===\"success\"){// Want to store credential into local Storage\n//   localStorage.setItem(\"email\", emailInputRef.current.value);\n//   localStorage.setItem(\"password\", passwordInputRef.current.value);\n// Want to store credential into local storage\n// Now , I do not want to store username and password into local storage. Instead , we store token.\nlocalStorage.setItem(\"token\",JsoData.data.token);// Now , I do not want to store username and password into local storage. Instead , we store token.\ndispatch({type:\"login\",data:JsoData.data});navigate(\"/dashboard\");}else{alert(JsoData.msg);}console.log(JsoData);};useEffect(()=>{// Auto login work properly.....\nemailInputRef.current.value=localStorage.getItem(\"email\");passwordInputRef.current.value=localStorage.getItem(\"password\");// validateLogin();\n// I wanted to send token , when token exist and \n// When we send this token Server recieve this token.\n//After That , You sholud Decript it.\n//  if (localStorage.getItem(\"token\")) {\n//      validateToken();\n//   }\n},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsxs(\"form\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Login Page\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Email\"}),/*#__PURE__*/_jsx(\"input\",{ref:emailInputRef})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Password\"}),/*#__PURE__*/_jsx(\"input\",{ref:passwordInputRef})]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>validateLogin(),children:\"Login\"})})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Link,{to:\"/signup\",children:\"Signup\"})]});}export default Login;","map":{"version":3,"names":["React","useRef","useEffect","useDispatch","Link","useNavigate","jsx","_jsx","jsxs","_jsxs","Login","emailInputRef","passwordInputRef","dispatch","navigate","validateToken","dataToSend","FormData","append","localStorage","getItem","reqOption","method","body","JSONData","fetch","JSOData","json","console","log","status","type","data","alert","msg","validateLogin","current","value","JsoData","setItem","token","className","children","ref","onClick","to"],"sources":["/Users/nirmalkumar/Documents/App deployment Render/Demo/src/Component/Login.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react'\nimport { useDispatch } from 'react-redux';\nimport { Link, useNavigate } from 'react-router-dom';\n\nfunction Login() {\n\n    let emailInputRef = useRef();\n    let passwordInputRef = useRef();\n    let dispatch = useDispatch();\n\n    let navigate = useNavigate();\n\n    let validateToken = async () => {\n        let dataToSend = new FormData();\n        dataToSend.append(\"token\", localStorage.getItem(\"token\"));\n\n        let reqOption = {\n            method: \"POST\",\n            body: dataToSend,\n        }\n        let JSONData = await fetch(\"/validateToken\", reqOption);\n        let JSOData = await JSONData.json();\n        console.log(JSOData);\n        // Copy this code...................\n\n        if (JSOData.status === \"success\") {\n            dispatch({ type: \"login\", data: JSOData.data });\n            navigate(\"/dashboard\");\n        }\n        else {\n            alert(JSOData.msg);\n        }\n    }\n\n    let validateLogin = async () => {\n        let dataToSend = new FormData();\n        dataToSend.append(\"email\", emailInputRef.current.value);\n        dataToSend.append(\"password\", passwordInputRef.current.value);\n        let reqOption = {\n            method: \"POST\",\n            body: dataToSend,\n        }\n        let JSONData = await fetch(\"/login\", reqOption);\n        let JsoData = await JSONData.json();\n        if (JsoData.status === \"success\") {\n            // Want to store credential into local Storage\n            //   localStorage.setItem(\"email\", emailInputRef.current.value);\n            //   localStorage.setItem(\"password\", passwordInputRef.current.value);\n\n            // Want to store credential into local storage\n            // Now , I do not want to store username and password into local storage. Instead , we store token.\n            localStorage.setItem(\"token\", JsoData.data.token);\n            // Now , I do not want to store username and password into local storage. Instead , we store token.\n            dispatch({ type: \"login\", data: JsoData.data });\n            navigate(\"/dashboard\");\n        }\n        else {\n            alert(JsoData.msg);\n        }\n        console.log(JsoData);\n    }\n    useEffect(() => {\n        // Auto login work properly.....\n        emailInputRef.current.value = localStorage.getItem(\"email\");\n        passwordInputRef.current.value = localStorage.getItem(\"password\");\n        // validateLogin();\n\n        // I wanted to send token , when token exist and \n        // When we send this token Server recieve this token.\n        //After That , You sholud Decript it.\n        //  if (localStorage.getItem(\"token\")) {\n        //      validateToken();\n        //   }\n\n    }, []);\n\n    return (\n        <div className='App'>\n            <form>\n                <h2>Login Page</h2>\n\n                <div>\n                    <label>Email</label>\n                    <input ref={emailInputRef}></input>\n                </div>\n                <div>\n                    <label>Password</label>\n                    <input ref={passwordInputRef}></input>\n                </div>\n\n                <div>\n                    <button type='button' onClick={() => validateLogin()}>Login</button>\n                </div>\n\n            </form>\n            <br></br>\n            <br></br>\n            <br></br>\n            <br></br>\n            <Link to=\"/signup\">Signup</Link>\n        </div>\n    )\n}\n\nexport default Login"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}