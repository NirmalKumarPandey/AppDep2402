{"ast":null,"code":"var _jsxFileName = \"/Users/nirmalkumar/Documents/Node Js/Json Web Token/Demo/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet initialStore = {\n  userDetails: {}\n};\nlet reducer = (updatedStore = initialStore, dispatchedObj) => {\n  console.log(\"Inside Reducer\");\n  if (dispatchedObj.type === \"login\") {\n    return {\n      ...updatedStore,\n      userDetails: dispatchedObj.data\n    };\n  }\n};\nlet store = createStore(reducer);\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(Provider, {\n  store: store,\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 23,\n  columnNumber: 3\n}, this));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","map":{"version":3,"names":["React","ReactDOM","App","reportWebVitals","createStore","Provider","jsxDEV","_jsxDEV","initialStore","userDetails","reducer","updatedStore","dispatchedObj","console","log","type","data","store","root","createRoot","document","getElementById","render","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/nirmalkumar/Documents/Node Js/Json Web Token/Demo/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\n\nlet initialStore = {\n  userDetails: {}\n}\nlet reducer = (updatedStore = initialStore, dispatchedObj) => {\n  console.log(\"Inside Reducer\");\n\n  if (dispatchedObj.type === \"login\") {\n    return { ...updatedStore, userDetails: dispatchedObj.data };\n  }\n}\nlet store = createStore(reducer);\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,SAASC,WAAW,QAAQ,OAAO;AACnC,SAASC,QAAQ,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,IAAIC,YAAY,GAAG;EACjBC,WAAW,EAAE,CAAC;AAChB,CAAC;AACD,IAAIC,OAAO,GAAGA,CAACC,YAAY,GAAGH,YAAY,EAAEI,aAAa,KAAK;EAC5DC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;EAE7B,IAAIF,aAAa,CAACG,IAAI,KAAK,OAAO,EAAE;IAClC,OAAO;MAAE,GAAGJ,YAAY;MAAEF,WAAW,EAAEG,aAAa,CAACI;IAAK,CAAC;EAC7D;AACF,CAAC;AACD,IAAIC,KAAK,GAAGb,WAAW,CAACM,OAAO,CAAC;AAEhC,MAAMQ,IAAI,GAAGjB,QAAQ,CAACkB,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,eACTf,OAAA,CAACF,QAAQ;EAACY,KAAK,EAAEA,KAAM;EAAAM,QAAA,eACrBhB,OAAA,CAACL,GAAG;IAAAsB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACC,CAEZ,CAAC;;AAED;AACA;AACA;AACAxB,eAAe,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}